{"remainingRequest":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\src\\views\\search\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\src\\views\\search\\Index.vue","mtime":1600536934834},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"search-wrap\">\r\n    <div class=\"banner layer\">\r\n      <div class=\"search-inner\">\r\n        <div class=\"search-box flex-row\">\r\n          <input\r\n            v-model=\"keyword\"\r\n            maxlength=\"128\"\r\n            type=\"text\"\r\n            placeholder=\"搜索音乐/MV/歌单/歌手\"\r\n            class=\"search\"\r\n          />\r\n          <i class=\"iconfont nicesearch-o search-icon\" @click=\"search(1)\"></i>\r\n        </div>\r\n        <div\r\n          class=\"list\"\r\n          :class=\"!isKeyword ? 'hot' : ''\"\r\n          style=\"display: none;\"\r\n        >\r\n          <div\r\n            class=\"item\"\r\n            v-if=\"searchResult.songs && searchResult.songs.length > 0\"\r\n          >\r\n            <div class=\"title flex-row\">\r\n              <i class=\"iconfont niceyinfu3\"></i> 单曲\r\n            </div>\r\n            <ul>\r\n              <li v-for=\"item of searchResult.songs\" :key=\"item.id\">\r\n                {{ item.name }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div\r\n            class=\"item\"\r\n            v-if=\"searchResult.artists && searchResult.artists.length > 0\"\r\n          >\r\n            <div class=\"title flex-row\">\r\n              <i class=\"iconfont niceicon-4\"></i> 歌手\r\n            </div>\r\n            <ul>\r\n              <li v-for=\"item of searchResult.artists\" :key=\"item.id\">\r\n                {{ item.name }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div\r\n            class=\"item\"\r\n            v-if=\"searchResult.albums && searchResult.albums.length > 0\"\r\n          >\r\n            <div class=\"title flex-row\">\r\n              <i class=\"iconfont niceRaidobox-selectedRai1\"></i> 专辑\r\n            </div>\r\n            <ul>\r\n              <li v-for=\"item of searchResult.albums\" :key=\"item.id\">\r\n                {{ item.name }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div\r\n            class=\"item\"\r\n            v-if=\"searchResult.playlists && searchResult.playlists.length > 0\"\r\n          >\r\n            <div class=\"title flex-row\">\r\n              <i\r\n                class=\"iconfont nicebofangliebiao24\"\r\n                style=\"font-size: 20px;\"\r\n              ></i>\r\n              歌单\r\n            </div>\r\n            <ul>\r\n              <li v-for=\"item of searchResult.playlists\" :key=\"item.id\">\r\n                {{ item.name }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"main container\">\r\n      <div class=\"tab flex-row\">\r\n        <h2>搜索结果</h2>\r\n        <a :class=\"type === 1 ? 'active' : ''\" @click=\"changeType(1)\">单曲</a>\r\n        <a :class=\"type === 100 ? 'active' : ''\" @click=\"changeType(100)\"\r\n          >歌手</a\r\n        >\r\n        <a :class=\"type === 10 ? 'active' : ''\" @click=\"changeType(10)\">专辑</a>\r\n        <a :class=\"type === 1014 ? 'active' : ''\" @click=\"changeType(1014)\"\r\n          >视频</a\r\n        >\r\n        <a :class=\"type === 1000 ? 'active' : ''\" @click=\"changeType(1000)\"\r\n          >歌单</a\r\n        >\r\n      </div>\r\n      <div class=\"content\">\r\n        <artist-list :songs=\"songs\" :isPerson=\"isPerson\" v-if=\"type === 1\" v-loading=\"loading\" />\r\n        <ul class=\"singer-list\" v-if=\"type === 100\">\r\n          <singer-item v-for=\"item of singers\" :key=\"item.id\" :item=\"item\" />\r\n        </ul>\r\n        <album-list :albums=\"albums\" v-if=\"type == 10\" />\r\n        <mv-list :mvs=\"videos\" v-if=\"type == 1014\"></mv-list>\r\n        <song-sheet :sheetList=\"playList\" v-if=\"type == 1000\"></song-sheet>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { createSong } from '@/model/song'\r\nimport { createVideo } from '@/model/video'\r\nimport ArtistList from 'components/common/artistList/Index'\r\nimport SingerItem from 'components/common/singerItem/Index'\r\nimport AlbumList from 'components/common/albumList/Index'\r\nimport MvList from 'components/common/mvList/Index'\r\nimport songSheet from 'components/common/songSheet/Index'\r\nexport default {\r\n  data() {\r\n    return {\r\n      keyword: '',\r\n      searchResult: {},\r\n      limit: 30,\r\n      offset: 0,\r\n      type: 1,\r\n      isPerson: true,\r\n      songs: [],\r\n      singers: [],\r\n      albums: [],\r\n      videos: [],\r\n      playList: [],\r\n      loading: false\r\n    }\r\n  },\r\n  components: {\r\n    ArtistList,\r\n    SingerItem,\r\n    AlbumList,\r\n    MvList,\r\n    songSheet\r\n  },\r\n  computed: {\r\n    isKeyword() {\r\n      return this.keyword.split(' ').join('').length == 0\r\n    }\r\n  },\r\n  watch: {\r\n    keyword(newVal, oldVal) {\r\n      console.log(newVal, oldVal)\r\n      if (this.timer) {\r\n        clearTimeout(this.timer)\r\n      }\r\n      if (!this.keyword || this.keyword.split(' ').join('').length == 0) {\r\n        this.searchResult = {}\r\n        return\r\n      }\r\n      this.timer = setTimeout(() => {\r\n        this.searchSuggest()\r\n        this.search(this.type)\r\n      }, 100)\r\n    },\r\n    $route(newObj, oldObj) {\r\n      if(newObj.query.keyword !== oldObj.query.keyword) {\r\n        this.keyword = newObj.query.keyword\r\n        this.search(1)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 更改搜索类型\r\n    changeType(type) {\r\n      this.type = type\r\n      this.search(type)\r\n    },\r\n    // 搜索建议\r\n    async searchSuggest() {\r\n      let res = await this.$api.searchSuggest(this.keyword)\r\n      // console.log(res)\r\n      if (JSON.stringify(res.result) !== '{}') {\r\n        this.searchResult = res.result\r\n      }\r\n    },\r\n    // 搜索\r\n    search(type) {\r\n      this.$api\r\n        .search(this.keyword, this.limit, this.offset, type)\r\n        .then(res => {\r\n          if (res.code === 200) {\r\n            switch (type) {\r\n              case 1: {\r\n                let lists = res.result.songs\r\n                let sliceArr = []\r\n                lists.map(item => {\r\n                  sliceArr.push(item.id)\r\n                })\r\n                this.getSongDetail(sliceArr)\r\n                break\r\n              }\r\n              case 100: {\r\n                this.singers = res.result.artists\r\n                break\r\n              }\r\n              case 10: {\r\n                this.albums = res.result.albums\r\n                break\r\n              }\r\n              case 1014: {\r\n                this.videos = this._normalizeVideos(res.result.videos)\r\n                break\r\n              }\r\n              case 1000: {\r\n                this.playList = res.result.playlists\r\n                break\r\n              }\r\n              default: {\r\n                let lists = res.result.songs\r\n                let sliceArr = []\r\n                lists.map(item => {\r\n                  sliceArr.push(item.id)\r\n                })\r\n                this.getSongDetail(sliceArr)\r\n                break\r\n              }\r\n            }\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    },\r\n    // 获取歌曲列表\r\n    async getSongDetail(sliceArr) {\r\n      this.loading = true\r\n      let timestamp = new Date().valueOf()\r\n      let ids = sliceArr.join(',')\r\n      try {\r\n        let beforeRes = await this.$api.getSongDetail(ids, timestamp)\r\n        let res = beforeRes.songs\r\n        this.songs = this._normalizeSongs(res)\r\n        this.loading = false\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    },\r\n    // 处理歌曲\r\n    _normalizeSongs(list) {\r\n      let ret = []\r\n      list.map(item => {\r\n        if (item.id) {\r\n          ret.push(createSong(item))\r\n        }\r\n      })\r\n      return ret\r\n    },\r\n    // 处理视频\r\n    _normalizeVideos(list) {\r\n      let ret = []\r\n      list.map(item => {\r\n        if (item.vid) {\r\n          ret.push(\r\n            createVideo({\r\n              id: item.vid,\r\n              nickName: item.creator.nickname,\r\n              name: item.title,\r\n              playCount: item.playTime,\r\n              duration: item.durationms,\r\n              image: item.coverUrl,\r\n              isLive: false\r\n            })\r\n          )\r\n        }\r\n      })\r\n      return ret\r\n    }\r\n  },\r\n  created() {},\r\n  mounted() {\r\n    let keyword = this.$route.query.keyword\r\n    if (keyword) {\r\n      this.keyword = keyword\r\n      this.search(1)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"stylus\" scoped>\r\n.search-wrap {\r\n  margin-top: -20px;\r\n  .banner {\r\n    width: 100%;\r\n    height: 250px;\r\n    background: url(../../assets/images/personal.jpg);\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-attachment: fixed;\r\n    .search-inner {\r\n      width: 720px;\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%,-50%);\r\n      .search-box {\r\n        position: relative;\r\n        z-index: 10;\r\n        padding-left: 8px;\r\n        border-radius: 2px;\r\n        background: #f5f5f5;\r\n        input {\r\n          display: inline-block;\r\n          height: 54px;\r\n          flex: 1;\r\n          line-height: 54px;\r\n          border: none;\r\n          margin-right: 24px;\r\n          padding-left: 10px;\r\n          background: #f5f5f5;\r\n        }\r\n        .search-icon {\r\n          font-size: 20px;\r\n          padding: 16px;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n      .list {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        background: #fff;\r\n        padding: 18px 0 15px;\r\n        transition-property: top;\r\n        transition-duration: .2s;\r\n        transition-timing-function: ease-in-out;\r\n        opacity: 0;\r\n        z-index: 0;\r\n        box-shadow: 0 10px 30px 0 rgba(65,67,70,.08);\r\n        border-radius: 4px;\r\n        &.hot {\r\n          top: 110%;\r\n          opacity: 1;\r\n        }\r\n        .item {\r\n          .title {\r\n            height: 30px;\r\n            padding: 0 18px;\r\n            font-size: 12px;\r\n            color: #909399;\r\n            line-height: 30px;\r\n            i {\r\n              font-size: 18px;\r\n              margin-right: 5px;\r\n              font-weight: bold;\r\n              color: $color-theme;\r\n            }\r\n          }\r\n        }\r\n        ul {\r\n          li {\r\n            height: 38px;\r\n            line-height: 38px;\r\n            padding: 0 18px;\r\n            font-weight: 300;\r\n            background: #ffffff;\r\n            transition: background 0.1s;\r\n            cursor: pointer;\r\n            &:hover {\r\n              background: #f5f5f5;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .main {\r\n    .tab {\r\n      display: flex;\r\n      align-items: baseline;\r\n      margin-top: 43px;\r\n      margin-bottom: 42px;\r\n      h2 {\r\n        font-size: 22px;\r\n        font-weight: 600;\r\n        line-height: 30px;\r\n        margin-right: 40px;\r\n      }\r\n      a {\r\n        position: relative;\r\n        display: inline-block;\r\n        height: 20px;\r\n        line-height: 20px;\r\n        margin-right: 34px;\r\n        font-weight: 300;\r\n        color: #333;\r\n        z-index: 1;\r\n        cursor: pointer;\r\n        &.active {\r\n          &::after {\r\n            position: absolute;\r\n            content: \"\";\r\n            left: 0;\r\n            bottom: 1px;\r\n            width: 100%;\r\n            height: 6px;\r\n            background: $color-theme;\r\n            opacity: 0.5;\r\n            z-index: -1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .content {\r\n      .singer-list {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        margin-top: 30px;\r\n        margin: 30px -15px 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/search"}]}