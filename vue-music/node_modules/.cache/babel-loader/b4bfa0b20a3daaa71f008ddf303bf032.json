{"remainingRequest":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zlw12\\Desktop\\store\\vue-music\\src\\components\\common\\search\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\src\\components\\common\\search\\index.vue","mtime":1605003257689},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL3psdzEyL0Rlc2t0b3Avc3RvcmUvdnVlLW11c2ljL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFN0YXIgZnJvbSAnLi4vc3Rhcic7CmltcG9ydCBTZWFyY2hJbnB1dCBmcm9tICcuLi9pbnB1dCc7CmltcG9ydCBTb25nTGlzdCBmcm9tICcuLi9zb25nLWxpc3QnOwppbXBvcnQgU29uZ1NoZWV0IGZyb20gJy4uL3NvbmdzaGVldC9zb25nc2hlZXRfc2Nzcyc7CmltcG9ydCBTaW5nZXIgZnJvbSAnLi4vc2luZ2VyL3Npbmdlcic7CmltcG9ydCBBbGJ1bSBmcm9tICcuLi9hbGJ1bSc7CmltcG9ydCBFcnJvciBmcm9tICcuLi9lcnJvcic7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAga2V5d29yZHM6IHRoaXMuJHJvdXRlLnF1ZXJ5LmtleXdvcmRzLAogICAgICBsZW46IG51bGwsCiAgICAgIGN1cjogJycsCiAgICAgIHR5cGU6IFtdLAogICAgICBsaXN0OiBbXQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFN0YXI6IFN0YXIsCiAgICBTZWFyY2hJbnB1dDogU2VhcmNoSW5wdXQsCiAgICBTb25nTGlzdDogU29uZ0xpc3QsCiAgICBTb25nU2hlZXQ6IFNvbmdTaGVldCwKICAgIFNpbmdlcjogU2luZ2VyLAogICAgQWxidW06IEFsYnVtLAogICAgRXJyb3I6IEVycm9yCiAgfSwKICB3YXRjaDogewogICAgJHJvdXRlOiBmdW5jdGlvbiAkcm91dGUodmFsKSB7CiAgICAgIGNvbnNvbGUubG9nKHZhbCk7CiAgICAgIHRoaXMuZ2V0U2VhcmNoKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkgewogICAgICB0aGlzLlR5cGUoKTsKICAgICAgdGhpcy5nZXRTZWFyY2goKTsKICAgIH0sCiAgICAvLyDojrflj5bmkJzntKLkv6Hmga8KICAgIGdldFNlYXJjaDogZnVuY3Rpb24gZ2V0U2VhcmNoKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIga2V5d29yZHMsIHR5cGUsIHBhcmFtcywgYWN0aW9uOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzLmtleXdvcmRzID0gX3RoaXMuJHJvdXRlLnF1ZXJ5LmtleXdvcmRzOwogICAgICAgICAgICAgICAga2V5d29yZHMgPSBfdGhpcy5rZXl3b3JkczsKICAgICAgICAgICAgICAgIHR5cGUgPSBfdGhpcy4kcm91dGUucXVlcnkudHlwZTsKICAgICAgICAgICAgICAgIHBhcmFtcyA9IHsKICAgICAgICAgICAgICAgICAga2V5d29yZHM6IGtleXdvcmRzLAogICAgICAgICAgICAgICAgICB0eXBlOiB0eXBlCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgYWN0aW9uID0gbmV3IE1hcChbWzEsIGZ1bmN0aW9uIChsaXN0KSB7CiAgICAgICAgICAgICAgICAgIHZhciBpZDsKICAgICAgICAgICAgICAgICAgaWQgPSBfdGhpcy51dGlscy5NdXNpY0lkKGxpc3QpOwoKICAgICAgICAgICAgICAgICAgX3RoaXMuZ2V0U29uZ0RldGFpbChpZCk7CiAgICAgICAgICAgICAgICB9XSwgWzEwLCBmdW5jdGlvbiAobGlzdCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMubGlzdCA9IGxpc3Q7CiAgICAgICAgICAgICAgICB9XSwgWzEwMCwgZnVuY3Rpb24gKGxpc3QpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmxpc3QgPSBsaXN0OwogICAgICAgICAgICAgICAgfV0sIFsxMDAwLCBmdW5jdGlvbiAobGlzdCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMubGlzdCA9IGxpc3Q7CiAgICAgICAgICAgICAgICB9XV0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGFwaS5TZWFyY2gocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKICAgICAgICAgICAgICAgICAgdmFyIGluZGV4OwoKICAgICAgICAgICAgICAgICAgX3RoaXMudHlwZS5zb21lKGZ1bmN0aW9uIChsaXN0KSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGxpc3QubnVtID09IF90aGlzLiRyb3V0ZS5xdWVyeS50eXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IGxpc3QudHlwZTsKICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmN1ciA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogbGlzdC5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBsaXN0Lm51bQogICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgX3RoaXMubGVuID0gcmVzLmRhdGEucmVzdWx0W2luZGV4XS5sZW5ndGg7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhLnJlc3VsdFtpbmRleF0sIF90aGlzLmN1cik7CiAgICAgICAgICAgICAgICAgIGFjdGlvbi5nZXQoX3RoaXMuY3VyLnR5cGUpKHJlcy5kYXRhLnJlc3VsdFtpbmRleF0pOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyB0eXBl56eN57G7CiAgICBUeXBlOiBmdW5jdGlvbiBUeXBlKCkgewogICAgICB2YXIgb2JqID0gW3sKICAgICAgICBuYW1lOiAn5Y2V5puyJywKICAgICAgICB0eXBlOiAnc29uZ3MnLAogICAgICAgIG51bTogMQogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ+S4k+i+kScsCiAgICAgICAgdHlwZTogJ2FsYnVtcycsCiAgICAgICAgbnVtOiAxMAogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ+atjOaJiycsCiAgICAgICAgdHlwZTogJ2FydGlzdHMnLAogICAgICAgIG51bTogMTAwCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5q2M5Y2VJywKICAgICAgICB0eXBlOiAncGxheWxpc3RzJywKICAgICAgICBudW06IDEwMDAKICAgICAgfV07CiAgICAgIHRoaXMudHlwZSA9IG9iajsKICAgIH0sCiAgICAvLyDmlLnlj5jmkJzntKLlhoXlrrkKICAgIGNoYW5nZVR5cGU6IGZ1bmN0aW9uIGNoYW5nZVR5cGUobnVtKSB7CiAgICAgIGlmIChudW0gPT0gdGhpcy5jdXIudHlwZSkgcmV0dXJuOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogJ3NlYXJjaCcsCiAgICAgICAgcXVlcnk6IHsKICAgICAgICAgIGtleXdvcmRzOiB0aGlzLmtleXdvcmRzLAogICAgICAgICAgdHlwZTogbnVtCiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5nZXRTZWFyY2goKTsKICAgIH0sCiAgICAvLyDojrflj5bpn7PkuZDor6bmg4UKICAgIGdldFNvbmdEZXRhaWw6IGZ1bmN0aW9uIGdldFNvbmdEZXRhaWwoaWQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kYXBpLlNvbmdEZXRhaWwoaWQpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgICBfdGhpczIubGlzdCA9IHJlcy5kYXRhLnNvbmdzOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIOiOt+WPluatjOWNleivpuaDhQogICAgZ2V0U29uZ1NoZWV0OiBmdW5jdGlvbiBnZXRTb25nU2hlZXQocGFyYW1zKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczMuJGFwaS5Ub3BQbGF5bGlzdChwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgICBfdGhpczMuc29uZ1NoZWV0ID0gcmVzLmRhdGEucGxheWxpc3RzOwogICAgICAgICAgICAgICAgICBfdGhpczMudG90YWwgPSByZXMuZGF0YS50b3RhbDsKICAgICAgICAgICAgICAgICAgX3RoaXMzLiRyZWZzLnNvcnQuaW5uZXJIVE1MID0gcmVzLmRhdGEuY2F0OwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"search-detail\">\r\n    <div class=\"search-btn\">\r\n      <star></star> \r\n      <div class=\"btn-search\">\r\n        <search-input></search-input>\r\n      </div>\r\n    </div>\r\n    <div class=\"container\">\r\n      <div class=\"kind-btn\">\r\n        <div class=\"title\">\r\n          <small>搜索\"{{ keywords }}\",找到{{len + '个' + cur.name}}</small>\r\n        </div>\r\n        <ul class=\"btn\">\r\n          <li \r\n            v-for=\"item in type\" \r\n            :key=\"item.type\"\r\n            :class=\"cur.name == item.name ? 'is-active' : ''\"\r\n            @click=\"changeType(item.num)\"\r\n          >\r\n            {{ item.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"main\">\r\n        <song-list :songLists=\"list\" v-if=\"cur.type == 1\" />\r\n        <singer :artist=\"list\" v-if=\"cur.type == 100\" />\r\n        <song-sheet :songLists=\"list\" v-if=\"cur.type == 1000\" />\r\n        <album :list=\"list\" v-if=\"cur.type == 10\" />\r\n        <error v-if=\"!list\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Star from '../star'\r\nimport SearchInput from '../input'\r\nimport SongList from '../song-list'\r\nimport SongSheet from '../songsheet/songsheet_scss'\r\nimport Singer from '../singer/singer'\r\nimport Album from '../album'\r\nimport Error from '../error'\r\nexport default {\r\n  data(){\r\n    return{\r\n      keywords: this.$route.query.keywords,\r\n      len: null,\r\n      cur: '',\r\n      type: [],\r\n      list: [],\r\n    }\r\n  },\r\n  components: {\r\n    Star,\r\n    SearchInput,\r\n    SongList,\r\n    SongSheet,\r\n    Singer,\r\n    Album,\r\n    Error,\r\n  },\r\n  watch:{\r\n    $route(val){\r\n      console.log(val)\r\n      this.getSearch();\r\n    }\r\n  },\r\n  mounted(){\r\n    this.init();\r\n  },\r\n  methods: {\r\n    init(){\r\n      this.Type();\r\n      this.getSearch();\r\n    },\r\n\r\n    // 获取搜索信息\r\n    async getSearch(){\r\n      this.keywords = this.$route.query.keywords;\r\n      let keywords = this.keywords;\r\n      let type = this.$route.query.type;\r\n      let params = {\r\n        keywords,\r\n        type,\r\n      }\r\n      let action = new Map([\r\n        [1, list => {\r\n          let id;\r\n          id = this.utils.MusicId(list)\r\n          this.getSongDetail(id)\r\n        }],\r\n        [10, list => this.list = list],\r\n        [100, list => this.list = list],\r\n        [1000, list => this.list = list]\r\n\r\n      ])\r\n      await this.$api.Search(params)\r\n        .then(res => {\r\n          console.log(res)\r\n          let index;\r\n          this.type.some( list => {\r\n            if(list.num == this.$route.query.type){\r\n              index = list.type;\r\n              this.cur = {\r\n                name: list.name,\r\n                type: list.num,\r\n              }\r\n              return;\r\n            }\r\n          })\r\n          this.len = res.data.result[index].length;\r\n          console.log(res.data.result[index],this.cur)\r\n          action.get(this.cur.type)(res.data.result[index]);\r\n        })\r\n      \r\n    },\r\n\r\n\r\n    // type种类\r\n    Type(){\r\n      let obj = [\r\n        {\r\n          name: '单曲',\r\n          type: 'songs',\r\n          num: 1,\r\n        },\r\n        {\r\n          name: '专辑',\r\n          type: 'albums',\r\n          num: 10,\r\n        },\r\n        {\r\n          name: '歌手',\r\n          type: 'artists',\r\n          num: 100,\r\n        },\r\n        {\r\n          name: '歌单',\r\n          type: 'playlists',\r\n          num: 1000,\r\n        },\r\n      ]\r\n      this.type = obj;\r\n    },\r\n\r\n    // 改变搜索内容\r\n    changeType(num){\r\n      if(num == this.cur.type) return;\r\n      this.$router.push({name: 'search',query: {\r\n        keywords: this.keywords,\r\n        type: num,\r\n      }})\r\n      this.getSearch();\r\n    },\r\n\r\n    // 获取音乐详情\r\n    async getSongDetail(id){\r\n      await this.$api.SongDetail(id)\r\n        .then( res => {\r\n          this.list = res.data.songs;\r\n        })\r\n    },\r\n\r\n    // 获取歌单详情\r\n    async getSongSheet(params){\r\n      await this.$api.TopPlaylist(params)\r\n        .then( res => {\r\n          this.songSheet = res.data.playlists\r\n          this.total = res.data.total;\r\n          this.$refs.sort.innerHTML = res.data.cat;\r\n        })\r\n    },\r\n\r\n\r\n\r\n    \r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .search-btn{\r\n    @include flex;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 250px;\r\n    background: #000;\r\n    .btn-search{\r\n      height: 55px;\r\n    }\r\n    .input{\r\n      width: 720px;\r\n    }\r\n  }\r\n  .container{\r\n    @include shadow;\r\n    .kind-btn{\r\n      margin-top: 28px;\r\n      padding: 10px 0 0 10px;\r\n      .title{\r\n        margin-bottom: 17px;\r\n        color: #999;\r\n      }\r\n      .btn{\r\n        margin-bottom: 42px;\r\n        display: flex;\r\n        li{\r\n          margin-right: 34px;\r\n          color: #333;\r\n          font-weight: 300;\r\n          cursor: pointer;\r\n          &.is-active{\r\n            color: $mainColor;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>"],"sourceRoot":"src/components/common/search"}]}