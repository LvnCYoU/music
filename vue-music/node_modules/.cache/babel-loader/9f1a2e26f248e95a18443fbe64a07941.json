{"remainingRequest":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zlw12\\Desktop\\store\\vue-music\\src\\components\\common\\MV\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\src\\components\\common\\MV\\index.vue","mtime":1605078668726},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL3psdzEyL0Rlc2t0b3Avc3RvcmUvdnVlLW11c2ljL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvemx3MTIvRGVza3RvcC9zdG9yZS92dWUtbXVzaWMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCc7CmltcG9ydCBwdXNoTG9hZCBmcm9tICcuLi9wdXNoLWxvYWQnOwppbXBvcnQgTXYgZnJvbSAnLi9tdic7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgbG9hZFN0YXR1czogdHJ1ZSwKICAgICAgbXY6IFtdLAogICAgICAvLyDojrflj5ZtdumFjee9rumhuQogICAgICBhcmVhOiBbewogICAgICAgIG5hbWU6ICflhajpg6gnLAogICAgICAgIHR5cGU6ICcnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5YaF5ZywJywKICAgICAgICB0eXBlOiAn5YaF5ZywJwogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ+a4r+WPsCcsCiAgICAgICAgdHlwZTogJ+a4r+WPsCcKICAgICAgfSwgewogICAgICAgIG5hbWU6ICfmrKfnvo4nLAogICAgICAgIHR5cGU6ICfmrKfnvo4nCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5pel5pysJywKICAgICAgICB0eXBlOiAn5pel5pysJwogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ+mfqeWbvScsCiAgICAgICAgdHlwZTogJ+mfqeWbvScKICAgICAgfV0sCiAgICAgIHR5cGU6IFt7CiAgICAgICAgbmFtZTogJ+WFqOmDqCcsCiAgICAgICAgdHlwZTogJycKICAgICAgfSwgewogICAgICAgIG5hbWU6ICflrpjmlrnniYgnLAogICAgICAgIHR5cGU6ICflrpjmlrnniYgnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5Y6f55SfJywKICAgICAgICB0eXBlOiAn5Y6f55SfJwogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ+eOsOWcuueJiCcsCiAgICAgICAgdHlwZTogJ+eOsOWcuueJiCcKICAgICAgfSwgewogICAgICAgIG5hbWU6ICfnvZHmmJPlh7rlk4EnLAogICAgICAgIHR5cGU6ICfnvZHmmJPlh7rlk4EnCiAgICAgIH1dLAogICAgICBvcmRlcjogW3sKICAgICAgICBuYW1lOiAn5LiK5Y2H5pyA5b+rJywKICAgICAgICB0eXBlOiAnJwogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ+acgOaWsCcsCiAgICAgICAgdHlwZTogJ+acgOaWsCcKICAgICAgfSwgewogICAgICAgIG5hbWU6ICfmnIDng60nLAogICAgICAgIHR5cGU6ICfmnIDng60nCiAgICAgIH1dLAogICAgICBwYXJhbXM6IHsKICAgICAgICBhcmVhOiAnJywKICAgICAgICB0eXBlOiAnJywKICAgICAgICBvcmRlcjogJycsCiAgICAgICAgbGltaXQ6IDE2LAogICAgICAgIG9mZnNldDogMAogICAgICB9CiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgcHVzaExvYWQ6IHB1c2hMb2FkLAogICAgTXY6IE12CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0KCk7CiAgfSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEFjdGlvbnMoWydtdkluaXQnXSkpLCB7fSwgewogICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgaWYgKHRoaXMuJHN0b3JlLnN0YXRlLm12Lm9mZnNldCkgewogICAgICAgIHRoaXMucGFyYW1zID0gdGhpcy4kc3RvcmUuc3RhdGUubXY7CiAgICAgICAgdGhpcy5wYXJhbXMub2Zmc2V0ID0gMDsKICAgICAgfQoKICAgICAgdGhpcy5nZXRNdih0aGlzLnBhcmFtcyk7CiAgICB9LAogICAgLy8g6I635Y+WbXYKICAgIGdldE12OiBmdW5jdGlvbiBnZXRNdihwYXJhbXMpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMubXZJbml0KHBhcmFtcyk7CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGFwaS5NdkFsbChwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgICB2YXIgYXJyID0gcmVzLmRhdGEuZGF0YTsKICAgICAgICAgICAgICAgICAgYXJyLm1hcChmdW5jdGlvbiAobGlzdCkgewogICAgICAgICAgICAgICAgICAgIHZhciBvYmogPSB7CiAgICAgICAgICAgICAgICAgICAgICBhcnRpc3ROYW1lOiBsaXN0LmFydGlzdE5hbWUsCiAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBsaXN0Lm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICBjb3VudDogbGlzdC5wbGF5Q291bnQsCiAgICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogbGlzdC5kdXJhdGlvbiwKICAgICAgICAgICAgICAgICAgICAgIGNvdmVyOiBsaXN0LmNvdmVyCiAgICAgICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICAgICAgX3RoaXMubXYucHVzaChvYmopOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBpZiAoX3RoaXMubXYubGVuZ3RoID4gMTApIHsKICAgICAgICAgICAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g57G75Yir6YCJ5oupCiAgICBjaG9vc2VUeXBlOiBmdW5jdGlvbiBjaG9vc2VUeXBlKHN0ciwgdmFsKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGFjdGlvbnMgPSB7CiAgICAgICAgJ2FyZWEnOiBmdW5jdGlvbiBhcmVhKCkgewogICAgICAgICAgcmV0dXJuIF90aGlzMi5wYXJhbXMuYXJlYSA9IHZhbDsKICAgICAgICB9LAogICAgICAgICdvcmRlcic6IGZ1bmN0aW9uIG9yZGVyKCkgewogICAgICAgICAgcmV0dXJuIF90aGlzMi5wYXJhbXMub3JkZXIgPSB2YWw7CiAgICAgICAgfSwKICAgICAgICAndHlwZSc6IGZ1bmN0aW9uIHR5cGUoKSB7CiAgICAgICAgICByZXR1cm4gX3RoaXMyLnBhcmFtcy50eXBlID0gdmFsOwogICAgICAgIH0KICAgICAgfTsKICAgICAgYWN0aW9uc1siIi5jb25jYXQoc3RyKV0uY2FsbCh0aGlzKTsKICAgICAgdGhpcy5tdi5sZW5ndGggPSAwOwogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLnBhcmFtcy5vZmZzZXQgPSAwOwogICAgICB0aGlzLm12SW5pdCh0aGlzLnBhcmFtcyk7CiAgICAgIHRoaXMuZ2V0TXYodGhpcy5wYXJhbXMpOwogICAgfSwKICAgIGxvYWQ6IGZ1bmN0aW9uIGxvYWQoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy5sb2FkU3RhdHVzICYmIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMy5wYXJhbXMub2Zmc2V0ICs9IF90aGlzMy5wYXJhbXMubGltaXQ7CgogICAgICAgIF90aGlzMy5nZXRNdihfdGhpczMucGFyYW1zKTsKICAgICAgfSwgMTUwMCk7CiAgICAgIHRoaXMubG9hZFN0YXR1cyA9IHRydWU7CiAgICB9CiAgfSkKfTs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"mv\">\r\n    <div class=\"container\">\r\n      <div class=\"filter\">\r\n        <ul class=\"tag-area\">\r\n          <li \r\n          :class=\"item.type == params.area ? 'is-active' : ''\"\r\n          v-for=\"item in area\" \r\n          :key=\"item.type\"\r\n          @click=\"chooseType('area',item.type)\"\r\n          ref=\"area\"\r\n          >\r\n            {{ item.name }}\r\n          </li>\r\n        </ul>\r\n        <ul class=\"tag-type\">\r\n          <li v-for=\"item in type\" \r\n          :class=\"item.type == params.type ? 'is-active' : ''\"\r\n          :key=\"item.type + item.name\"\r\n          @click=\"chooseType('type',item.type)\"\r\n          ref=\"sex\"\r\n          >\r\n            {{ item.name }}\r\n          </li>\r\n        </ul>\r\n        <ul class=\"tag-order\">\r\n          <li \r\n          :class=\"params.order == item.type ? 'is-active' : ''\"\r\n          v-for=\"item in order\" \r\n          :key=\"item.type+item.name\"\r\n          @click=\"chooseType('order',item.type)\"\r\n          ref=\"lang\"\r\n          >\r\n            {{ item.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <mv :list=\"mv\" />\r\n      <push-load v-show=\"loadStatus\" @scroll-data='load'/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions} from 'vuex'\r\nimport pushLoad from '../push-load';\r\nimport Mv from './mv'\r\nexport default {\r\n  data(){\r\n    return{\r\n      loading: true,\r\n      loadStatus: true,\r\n      mv: [],\r\n      // 获取mv配置项\r\n      area: [\r\n        {\r\n          name: '全部',\r\n          type: '',\r\n        },\r\n        {\r\n          name: '内地',\r\n          type: '内地',\r\n        },\r\n        {\r\n          name: '港台',\r\n          type: '港台',\r\n        },\r\n        {\r\n          name: '欧美',\r\n          type: '欧美',\r\n        },\r\n        {\r\n          name: '日本',\r\n          type: '日本'\r\n        },\r\n        {\r\n          name: '韩国',\r\n          type: '韩国'\r\n        }\r\n      ],\r\n      type: [\r\n        {\r\n          name: '全部',\r\n          type: '',\r\n        },\r\n        {\r\n          name: '官方版',\r\n          type: '官方版',\r\n        },\r\n        {\r\n          name: '原生',\r\n          type: '原生',\r\n        },\r\n        {\r\n          name: '现场版',\r\n          type: '现场版',\r\n        },\r\n        {\r\n          name: '网易出品',\r\n          type: '网易出品'\r\n        },\r\n      ],\r\n      order: [\r\n        {\r\n          name: '上升最快',\r\n          type: '',\r\n        },\r\n        {\r\n          name: '最新',\r\n          type: '最新',\r\n        },\r\n        {\r\n          name: '最热',\r\n          type: '最热',\r\n        },\r\n      ],\r\n      params: {\r\n        area: '',\r\n        type: '',\r\n        order: '',\r\n        limit: 16,\r\n        offset: 0,\r\n      },\r\n    }\r\n  },\r\n  components: {\r\n    pushLoad,\r\n    Mv,\r\n  },\r\n  mounted(){\r\n    this.init();\r\n  },\r\n  methods: {\r\n    ...mapActions(['mvInit']),\r\n\r\n    init(){\r\n      if(this.$store.state.mv.offset){\r\n        this.params = this.$store.state.mv;\r\n        this.params.offset = 0;\r\n      }\r\n      this.getMv(this.params);\r\n    },\r\n\r\n    // 获取mv\r\n    async getMv(params){\r\n      this.mvInit(params);\r\n      await this.$api.MvAll(params)\r\n        .then( res => {\r\n          let arr = res.data.data;\r\n          arr.map( list => {\r\n            let obj = {\r\n              artistName: list.artistName,\r\n              name: list.name,\r\n              count: list.playCount,\r\n              duration: list.duration,\r\n              cover: list.cover,\r\n            }\r\n            this.mv.push(obj)\r\n          })\r\n        })\r\n      if(this.mv.length > 10){\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    // 类别选择\r\n    chooseType(str,val){\r\n      let actions = {\r\n        'area': () => this.params.area = val,\r\n        'order': () => this.params.order = val,\r\n        'type' : () => this.params.type = val,\r\n      }\r\n      actions[`${str}`].call(this)\r\n      this.mv.length = 0;\r\n      this.loading = true;\r\n      this.params.offset = 0;\r\n      this.mvInit(this.params);\r\n      this.getMv(this.params);\r\n    },\r\n\r\n    load(){\r\n      this.loadStatus && setTimeout( () => {\r\n        this.params.offset += this.params.limit;\r\n        this.getMv(this.params);\r\n      },1500)\r\n      this.loadStatus = true;\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .filter{\r\n    ul{\r\n      margin: 20px 0;\r\n      display: flex;\r\n      \r\n      li{\r\n        margin-right: 6px;\r\n        width: 56px;\r\n        height: 28px;\r\n        line-height: 29px;\r\n        font-size: 13px;\r\n        text-align: center;\r\n        border-radius: 14px;\r\n        cursor: pointer;\r\n\r\n        &.is-active{\r\n          background: #fa2800;\r\n          font-weight: 700;\r\n          color: #fff;\r\n        }\r\n      }\r\n    }\r\n    .tag-order{\r\n      li{\r\n        &:first-child{\r\n          width: 102px;\r\n          border-radius: 14px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n</style>"],"sourceRoot":"src/components/common/MV"}]}