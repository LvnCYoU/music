{"remainingRequest":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\src\\api\\services\\instance.js","dependencies":[{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\src\\api\\services\\instance.js","mtime":1600536934667},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9NZXNzYWdlMiBmcm9tICJlbGVtZW50LXVpL2xpYi90aGVtZS1jaGFsay9tZXNzYWdlLmNzcyI7CmltcG9ydCAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvYmFzZS5jc3MiOwppbXBvcnQgX01lc3NhZ2UgZnJvbSAiZWxlbWVudC11aS9saWIvbWVzc2FnZSI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBxcyBmcm9tICdxcyc7CmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJzsKaW1wb3J0IHJvdXRlciBmcm9tICdAL3JvdXRlcic7CnZhciBhcGlfYmFzZV91cmwgPSBjb25maWcuYXBpX2Jhc2VfdXJsOwp2YXIgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewogIHRpbWU6IDEwMDAgKiA2MCwKICBiYXNlVVJMOiBhcGlfYmFzZV91cmwKfSk7Cmluc3RhbmNlLmRlZmF1bHRzLnJlc3BvbnNlVHlwZSA9ICdqc29uJzsKaW5zdGFuY2UuZGVmYXVsdHMud2l0aENyZWRlbnRpYWxzID0gdHJ1ZTsKaW5zdGFuY2UuZGVmYXVsdHMudHJhbnNmb3JtUmVxdWVzdCA9IFtmdW5jdGlvbiAoZGF0YSkgewogIHJldHVybiBxcy5zdHJpbmdpZnkoZGF0YSk7Cn1dOwoKaW5zdGFuY2UuZGVmYXVsdHMudmFsaWRhdGVTdGF0dXMgPSBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIHRydWU7Cn07IC8vIOivt+axguaLpuaIquWZqAoKCmluc3RhbmNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgX01lc3NhZ2UuZXJyb3IoewogICAgbWVzc2FnZTogJ+ivt+axgui2heaXtiEnCiAgfSk7CgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyDlk43lupTmi6bmiKrlmajljbPlvILluLjlpITnkIYKCmluc3RhbmNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhOwogIHZhciBzdGF0dXMgPSByZXNwb25zZS5zdGF0dXM7CiAgY29uc29sZS5sb2coc3RhdHVzKTsKCiAgaWYgKHN0YXR1cyA9PT0gMjAwKSB7CiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGRhdGEpOwogIH0gZWxzZSBpZiAoc3RhdHVzID09PSAzMDEpIHsKICAgIF9NZXNzYWdlLmVycm9yKHsKICAgICAgbWVzc2FnZTogJ+ivt+WFiOeZu+W9lSEnCiAgICB9KTsKCiAgICByb3V0ZXIucmVwbGFjZSh7CiAgICAgIHBhdGg6ICdsb2dpbicKICAgIH0pOwogICAgcmV0dXJuOwogIH0gZWxzZSB7CiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzcG9uc2UpOwogIH0KfSwgZnVuY3Rpb24gKGVycm9yKSB7fSk7CnZhciBhamF4TWV0aG9kID0gWydnZXQnLCAncG9zdCddOwp2YXIgYXBpID0ge307CmFqYXhNZXRob2QuZm9yRWFjaChmdW5jdGlvbiAobWV0aG9kKSB7CiAgLy8g5pWw57uE5Y+W5YC855qE5Lik56eN5pa55byPCiAgYXBpW21ldGhvZF0gPSBmdW5jdGlvbiAodXJpLCBkYXRhLCBjb25maWcpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIGluc3RhbmNlW21ldGhvZF0odXJpLCBkYXRhLCBjb25maWcpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICB9KTsKICAgIH0pOwogIH07Cn0pOwpleHBvcnQgZGVmYXVsdCBhcGk7"},{"version":3,"sources":["C:/Users/zlw12/Desktop/新建文件夹/desktop-nicemusic/src/api/services/instance.js"],"names":["axios","qs","config","router","api_base_url","instance","create","time","baseURL","defaults","responseType","withCredentials","transformRequest","data","stringify","validateStatus","interceptors","request","use","error","message","Promise","reject","response","status","console","log","resolve","replace","path","ajaxMethod","api","forEach","method","uri","then","code","catch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;IAEQC,Y,GAAiBF,M,CAAjBE,Y;AAER,IAAIC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC1BC,EAAAA,IAAI,EAAE,OAAO,EADa;AAE1BC,EAAAA,OAAO,EAAEJ;AAFiB,CAAb,CAAf;AAKAC,QAAQ,CAACI,QAAT,CAAkBC,YAAlB,GAAiC,MAAjC;AACAL,QAAQ,CAACI,QAAT,CAAkBE,eAAlB,GAAoC,IAApC;AACAN,QAAQ,CAACI,QAAT,CAAkBG,gBAAlB,GAAqC,CACnC,UAAAC,IAAI,EAAI;AACN,SAAOZ,EAAE,CAACa,SAAH,CAAaD,IAAb,CAAP;AACD,CAHkC,CAArC;;AAKAR,QAAQ,CAACI,QAAT,CAAkBM,cAAlB,GAAmC,YAAW;AAC5C,SAAO,IAAP;AACD,CAFD,C,CAIA;;;AACAV,QAAQ,CAACW,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACE,UAAAhB,MAAM,EAAI;AACR,SAAOA,MAAP;AACD,CAHH,EAIE,UAAAiB,KAAK,EAAI;AACP,WAAQA,KAAR,CAAc;AAACC,IAAAA,OAAO,EAAE;AAAV,GAAd;;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD,CAPH,E,CAUA;;AACAd,QAAQ,CAACW,YAAT,CAAsBO,QAAtB,CAA+BL,GAA/B,CAAmC,UAAAK,QAAQ,EAAI;AAC7C,MAAIV,IAAI,GAAGU,QAAQ,CAACV,IAApB;AACA,MAAIW,MAAM,GAAGD,QAAQ,CAACC,MAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,MAAIA,MAAM,KAAK,GAAf,EAAoB;AAClB,WAAOH,OAAO,CAACM,OAAR,CAAgBd,IAAhB,CAAP;AACD,GAFD,MAEO,IAAIW,MAAM,KAAK,GAAf,EAAoB;AACzB,aAAQL,KAAR,CAAc;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAd;;AACAjB,IAAAA,MAAM,CAACyB,OAAP,CAAe;AACbC,MAAAA,IAAI,EAAE;AADO,KAAf;AAGA;AACD,GANM,MAMA;AACL,WAAOR,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAP;AACD;AACF,CAfD,EAeG,UAAAJ,KAAK,EAAI,CACX,CAhBD;AAkBA,IAAIW,UAAU,GAAG,CAAC,KAAD,EAAQ,MAAR,CAAjB;AACA,IAAIC,GAAG,GAAG,EAAV;AACAD,UAAU,CAACE,OAAX,CAAmB,UAAAC,MAAM,EAAI;AAC3B;AACAF,EAAAA,GAAG,CAACE,MAAD,CAAH,GAAc,UAASC,GAAT,EAAcrB,IAAd,EAAoBX,MAApB,EAA4B;AACxC,WAAO,IAAImB,OAAJ,CAAY,UAASM,OAAT,EAAkBL,MAAlB,EAA0B;AAC3CjB,MAAAA,QAAQ,CAAC4B,MAAD,CAAR,CAAiBC,GAAjB,EAAsBrB,IAAtB,EAA4BX,MAA5B,EACGiC,IADH,CACQ,UAAAZ,QAAQ,EAAI;AAChB,YAAIA,QAAQ,CAACa,IAAT,KAAkB,GAAtB,EAA2B;AACzBT,UAAAA,OAAO,CAACJ,QAAD,CAAP;AACD;AACF,OALH,EAMGc,KANH,CAMS,UAAAlB,KAAK,EAAI;AACdG,QAAAA,MAAM,CAACH,KAAD,CAAN;AACD,OARH;AASD,KAVM,CAAP;AAWD,GAZD;AAaD,CAfD;AAiBA,eAAeY,GAAf","sourcesContent":["import axios from 'axios'\r\nimport qs from 'qs'\r\nimport config from '../config'\r\nimport router from '@/router'\r\nimport {Message} from 'element-ui'\r\nconst { api_base_url } = config\r\n\r\nlet instance = axios.create({\r\n  time: 1000 * 60,\r\n  baseURL: api_base_url\r\n})\r\n\r\ninstance.defaults.responseType = 'json'\r\ninstance.defaults.withCredentials = true\r\ninstance.defaults.transformRequest = [\r\n  data => {\r\n    return qs.stringify(data)\r\n  }\r\n]\r\ninstance.defaults.validateStatus = function() {\r\n  return true\r\n}\r\n\r\n// 请求拦截器\r\ninstance.interceptors.request.use(\r\n  config => {\r\n    return config\r\n  },\r\n  error => {\r\n    Message.error({message: '请求超时!'});\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器即异常处理\r\ninstance.interceptors.response.use(response => {\r\n  let data = response.data\r\n  let status = response.status\r\n  console.log(status)\r\n  if (status === 200) {\r\n    return Promise.resolve(data)\r\n  } else if (status === 301) {\r\n    Message.error({message: '请先登录!'})\r\n    router.replace({\r\n      path: 'login'\r\n    })\r\n    return\r\n  } else {\r\n    return Promise.reject(response)\r\n  }\r\n}, error => {\r\n})\r\n\r\nlet ajaxMethod = ['get', 'post']\r\nlet api = {}\r\najaxMethod.forEach(method => {\r\n  // 数组取值的两种方式\r\n  api[method] = function(uri, data, config) {\r\n    return new Promise(function(resolve, reject) {\r\n      instance[method](uri, data, config)\r\n        .then(response => {\r\n          if (response.code === 200) {\r\n            resolve(response)\r\n          }\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n})\r\n\r\nexport default api\r\n"]}]}