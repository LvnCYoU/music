{"remainingRequest":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\src\\api\\services\\api.js","dependencies":[{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\src\\api\\services\\api.js","mtime":1600536934666},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/zlw12/Desktop/新建文件夹/desktop-nicemusic/src/api/services/api.js"],"names":["api","getBanner","get","getSearchHot","search","keywords","limit","offset","type","searchSuggest","getPersonalized","getNewSongs","getHotSinger","getSingerList","params","getArtists","id","getArtistMv","getArtistAlbum","getArtistDesc","getArtistSimi","getToplist","getCatList","getHotlist","getPlayList","getPlayListDetail","s","time","getSongDetail","ids","post","getRelatedPlaylist","getSimiPlaylist","getCommentPlaylist","getSubscribersPlaylist","getVideoCategory","getVideoTag","getVideoAll","getVideoOther","getMvAll","getVideoUrl","getVideoDetail","getVideoDetailInfo","getVideoRelated","getVideoComments","sendComment","likeComment","likeResource","t","getMvDetail","getMvDetailInfo","getMvUrl","getMvComments","getMvRelated","getLyric","collectPlaylist","getAlbumData","getAlbumComment"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA;;;;AAGA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMD,GAAG,CAACE,GAAJ,CAAQ,SAAR,EAAmB,EAAnB,CAAN;AAAA,CAAlB;AAEP;;;;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAMH,GAAG,CAACE,GAAJ,CAAQ,aAAR,EAAuB,EAAvB,CAAN;AAAA,CAArB;AAEP;;;;;;;;AAOA,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,CAACC,QAAD,EAAWC,KAAX,EAAkBC,MAAlB,EAA0BC,IAA1B;AAAA,SACpBR,GAAG,CAACE,GAAJ,4BACsBG,QADtB,oBACwCC,KADxC,qBACwDC,MADxD,mBACuEC,IADvE,GAEE,EAFF,CADoB;AAAA,CAAf;AAMP;;;;;AAIA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAJ,QAAQ;AAAA,SACnCL,GAAG,CAACE,GAAJ,oCAAoCG,QAApC,GAAgD,EAAhD,CADmC;AAAA,CAA9B;AAGP;;;;;AAIA,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAJ,KAAK;AAAA,SAClCN,GAAG,CAACE,GAAJ,+BAA+BI,KAA/B,GAAwC,EAAxC,CADkC;AAAA,CAA7B;AAGP;;;;AAGA,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAMX,GAAG,CAACE,GAAJ,0BAAiC,EAAjC,CAAN;AAAA,CAApB;AAEP;;;;AAGA,OAAO,IAAMU,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAMZ,GAAG,CAACE,GAAJ,mCAA0C,EAA1C,CAAN;AAAA,CAArB;AAGP;;;;;;;;AAOA,OAAO,IAAMW,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM;AAAA,SAAId,GAAG,CAACE,GAAJ,iBAAwB;AAAEY,IAAAA,MAAM,EAANA;AAAF,GAAxB,CAAJ;AAAA,CAA5B;AAEP;;;;;AAIA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,EAAE;AAAA,SAAIhB,GAAG,CAACE,GAAJ,uBAAuBc,EAAvB,GAA6B,EAA7B,CAAJ;AAAA,CAArB;AAEP;;;;;AAIA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAH,MAAM;AAAA,SAAId,GAAG,CAACE,GAAJ,eAAsB;AAAEY,IAAAA,MAAM,EAANA;AAAF,GAAtB,CAAJ;AAAA,CAA1B;AAEP;;;;;;AAKA,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAAJ,MAAM;AAAA,SAAId,GAAG,CAACE,GAAJ,kBAAyB;AAAEY,IAAAA,MAAM,EAANA;AAAF,GAAzB,CAAJ;AAAA,CAA7B;AAEP;;;;;AAIA,OAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAAAH,EAAE;AAAA,SAAIhB,GAAG,CAACE,GAAJ,2BAA2Bc,EAA3B,GAAiC,EAAjC,CAAJ;AAAA,CAAxB;AAEP;;;;;AAIA,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAJ,EAAE;AAAA,SAAIhB,GAAG,CAACE,GAAJ,2BAA2Bc,EAA3B,GAAiC,EAAjC,CAAJ;AAAA,CAAxB;AAEP;;;;AAGA,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMrB,GAAG,CAACE,GAAJ,oBAA2B,EAA3B,CAAN;AAAA,CAAnB;AAEP;;;;AAGA,OAAO,IAAMoB,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMtB,GAAG,CAACE,GAAJ,sBAA6B,EAA7B,CAAN;AAAA,CAAnB;AAEP;;;;AAGA,OAAO,IAAMqB,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMvB,GAAG,CAACE,GAAJ,kBAAyB,EAAzB,CAAN;AAAA,CAAnB;AAEP;;;;AAGA,OAAO,IAAMsB,WAAW,GAAG,SAAdA,WAAc,CAAAV,MAAM;AAAA,SAAId,GAAG,CAACE,GAAJ,kBAAyB;AAAEY,IAAAA,MAAM,EAANA;AAAF,GAAzB,CAAJ;AAAA,CAA1B;AAEP;;;;AAGA,OAAO,IAAMW,iBAAiB,GAAG,SAApBA,iBAAoB,CAACT,EAAD,EAAKU,CAAL,EAAQC,IAAR;AAAA,SAC/B3B,GAAG,CAACE,GAAJ,+BAA+Bc,EAA/B,gBAAuCU,CAAvC,wBAAsDC,IAAtD,GAA8D,EAA9D,CAD+B;AAAA,CAA1B;AAGP;;;;AAGA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMF,IAAN;AAAA,SAC3B3B,GAAG,CAAC8B,IAAJ,kCAAmCH,IAAnC,GAA2C;AAAEE,IAAAA,GAAG,EAAHA;AAAF,GAA3C,CAD2B;AAAA,CAAtB;AAGP;;;;AAGA,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAf,EAAE;AAAA,SAClChB,GAAG,CAACE,GAAJ,gCAAgCc,EAAhC,GAAsC,EAAtC,CADkC;AAAA,CAA7B;AAGP;;;;AAGA,OAAO,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAAAhB,EAAE;AAAA,SAAIhB,GAAG,CAACE,GAAJ,6BAA6Bc,EAA7B,GAAmC,EAAnC,CAAJ;AAAA,CAA1B;AAEP;;;;;;;;AAOA,OAAO,IAAMiB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAnB,MAAM;AAAA,SACtCd,GAAG,CAACE,GAAJ,sBAA6B;AAAEY,IAAAA,MAAM,EAANA;AAAF,GAA7B,CADsC;AAAA,CAAjC;AAGP;;;;;;;AAMA,OAAO,IAAMoB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAApB,MAAM;AAAA,SAC1Cd,GAAG,CAACE,GAAJ,0BAAiC;AAAEY,IAAAA,MAAM,EAANA;AAAF,GAAjC,CAD0C;AAAA,CAArC;AAGP;;;;AAGA,OAAO,IAAMqB,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAMnC,GAAG,CAACE,GAAJ,yBAAgC,EAAhC,CAAN;AAAA,CAAzB;AAEP;;;;AAGA,OAAO,IAAMkC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAMpC,GAAG,CAACE,GAAJ,sBAA6B,EAA7B,CAAN;AAAA,CAApB;AAEP;;;;AAGA,OAAO,IAAMmC,WAAW,GAAG,SAAdA,WAAc,CAAA9B,MAAM;AAAA,SAC/BP,GAAG,CAACE,GAAJ,sCAAsCK,MAAtC,GAAgD,EAAhD,CAD+B;AAAA,CAA1B;AAGP;;;;AAGA,OAAO,IAAM+B,aAAa,GAAG,SAAhBA,aAAgB,CAACtB,EAAD,EAAKT,MAAL;AAAA,SAC3BP,GAAG,CAACE,GAAJ,2BAA2Bc,EAA3B,qBAAwCT,MAAxC,GAAkD,EAAlD,CAD2B;AAAA,CAAtB;AAGP;;;;AAGA,OAAO,IAAMgC,QAAQ,GAAG,SAAXA,QAAW,CAAAzB,MAAM;AAAA,SAAId,GAAG,CAACE,GAAJ,YAAmB;AAAEY,IAAAA,MAAM,EAANA;AAAF,GAAnB,CAAJ;AAAA,CAAvB;AAEP;;;;AAGA,OAAO,IAAM0B,WAAW,GAAG,SAAdA,WAAc,CAAAxB,EAAE;AAAA,SAAIhB,GAAG,CAACE,GAAJ,yBAAyBc,EAAzB,GAA+B,EAA/B,CAAJ;AAAA,CAAtB;AAEP;;;;AAGA,OAAO,IAAMyB,cAAc,GAAG,SAAjBA,cAAiB,CAAAzB,EAAE;AAAA,SAAIhB,GAAG,CAACE,GAAJ,4BAA4Bc,EAA5B,GAAkC,EAAlC,CAAJ;AAAA,CAAzB;AAEP;;;;AAGA,OAAO,IAAM0B,kBAAkB,GAAG,SAArBA,kBAAqB,CAAC1B,EAAD,EAAKW,IAAL;AAAA,SAChC3B,GAAG,CAACE,GAAJ,kCAAkCc,EAAlC,wBAAkDW,IAAlD,GAA0D,EAA1D,CADgC;AAAA,CAA3B;AAGP;;;;AAGA,OAAO,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAAA3B,EAAE;AAAA,SAAIhB,GAAG,CAACE,GAAJ,gCAAgCc,EAAhC,GAAsC,EAAtC,CAAJ;AAAA,CAA1B;AAEP;;;;AAGA,OAAO,IAAM4B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA9B,MAAM;AAAA,SAAId,GAAG,CAACE,GAAJ,mBAA0B;AAAEY,IAAAA,MAAM,EAANA;AAAF,GAA1B,CAAJ;AAAA,CAA/B;AAEP;;;;;;;;;;;AAWA,OAAO,IAAM+B,WAAW,GAAG,SAAdA,WAAc,CAAA/B,MAAM;AAAA,SAAId,GAAG,CAACE,GAAJ,aAAoB;AAAEY,IAAAA,MAAM,EAANA;AAAF,GAApB,CAAJ;AAAA,CAA1B;AAEP;;;;;;;;AAQA,OAAO,IAAMgC,WAAW,GAAG,SAAdA,WAAc,CAAAhC,MAAM;AAAA,SAAId,GAAG,CAACE,GAAJ,kBAAyB;AAAEY,IAAAA,MAAM,EAANA;AAAF,GAAzB,CAAJ;AAAA,CAA1B;AAEP;;;;;;;AAOA,OAAO,IAAMiC,YAAY,GAAG,SAAfA,YAAe,CAACvC,IAAD,EAAOwC,CAAP,EAAUhC,EAAV;AAAA,SAC1BhB,GAAG,CAACE,GAAJ,+BAA+BM,IAA/B,gBAAyCwC,CAAzC,iBAAiDhC,EAAjD,GAAuD,EAAvD,CAD0B;AAAA,CAArB;AAGP;;;;AAGA,OAAO,IAAMiC,WAAW,GAAG,SAAdA,WAAc,CAAAjC,EAAE;AAAA,SAAIhB,GAAG,CAACE,GAAJ,2BAA2Bc,EAA3B,GAAiC,EAAjC,CAAJ;AAAA,CAAtB;AAEP;;;;AAGA,OAAO,IAAMkC,eAAe,GAAG,SAAlBA,eAAkB,CAAClC,EAAD,EAAKW,IAAL;AAAA,SAC7B3B,GAAG,CAACE,GAAJ,gCAAgCc,EAAhC,wBAAgDW,IAAhD,GAAwD,EAAxD,CAD6B;AAAA,CAAxB;AAGP;;;;AAGA,OAAO,IAAMwB,QAAQ,GAAG,SAAXA,QAAW,CAAAnC,EAAE;AAAA,SAAIhB,GAAG,CAACE,GAAJ,sBAAsBc,EAAtB,GAA4B,EAA5B,CAAJ;AAAA,CAAnB;AAEP;;;;AAGA,OAAO,IAAMoC,aAAa,GAAG,SAAhBA,aAAgB,CAAAtC,MAAM;AAAA,SAAId,GAAG,CAACE,GAAJ,gBAAuB;AAAEY,IAAAA,MAAM,EAANA;AAAF,GAAvB,CAAJ;AAAA,CAA5B;AAEP;;;;AAGA,OAAO,IAAMuC,YAAY,GAAG,SAAfA,YAAe,CAAArC,EAAE;AAAA,SAAIhB,GAAG,CAACE,GAAJ,yBAAyBc,EAAzB,GAA+B,EAA/B,CAAJ;AAAA,CAAvB;AAGP;;;;AAGA,OAAO,IAAMsC,QAAQ,GAAG,SAAXA,QAAW,CAAAtC,EAAE;AAAA,SAAIhB,GAAG,CAACE,GAAJ,qBAAqBc,EAArB,GAA2B,EAA3B,CAAJ;AAAA,CAAnB;AAEP;;;;AAGA,OAAO,IAAMuC,eAAe,GAAG,SAAlBA,eAAkB,CAACP,CAAD,EAAIhC,EAAJ;AAAA,SAC7BhB,GAAG,CAACE,GAAJ,iCAAiC8C,CAAjC,iBAAyChC,EAAzC,GAA+C,EAA/C,CAD6B;AAAA,CAAxB;AAGP;;;;AAGA,OAAO,IAAMwC,YAAY,GAAG,SAAfA,YAAe,CAAAxC,EAAE;AAAA,SAAIhB,GAAG,CAACE,GAAJ,qBAAqBc,EAArB,GAA2B,EAA3B,CAAJ;AAAA,CAAvB;AAEP;;;;AAGA,OAAO,IAAMyC,eAAe,GAAG,SAAlBA,eAAkB,CAAA3C,MAAM;AAAA,SAAId,GAAG,CAACE,GAAJ,mBAA0B;AAAEY,IAAAA,MAAM,EAANA;AAAF,GAA1B,CAAJ;AAAA,CAA9B","sourcesContent":["import api from './instance'\r\n/**\r\n * @method 获取轮播图\r\n */\r\nexport const getBanner = () => api.get('/banner', {})\r\n\r\n/**\r\n * @method 获取热搜列表\r\n */\r\nexport const getSearchHot = () => api.get('/search/hot', {})\r\n\r\n/**\r\n * @method 搜索\r\n * @param {String} keywords 关键词\r\n * @param {Number} limit 返回数量 , 默认为 30\r\n * @param {Number} offset 偏移数量，用于分页 , 如 : 如 :( 页数 -1)*30, 其中 30 为 limit 的值 , 默认为 0\r\n * @param {Number} type 1: 单曲, 10: 专辑, 100: 歌手, 1000: 歌单, 1002: 用户, 1004: MV, 1006: 歌词, 1009: 电台, 1014: 视频, 1018:综合\r\n */\r\nexport const search = (keywords, limit, offset, type) =>\r\n  api.get(\r\n    `/search?keywords=${keywords}&limit=${limit}&offset=${offset}&type=${type}`,\r\n    {}\r\n  )\r\n\r\n/**\r\n * @method 搜索建议\r\n * @param {String} keywords 关键词\r\n */\r\nexport const searchSuggest = keywords =>\r\n  api.get(`/search/suggest?keywords=${keywords}`, {})\r\n\r\n/**\r\n * @method 获取推荐歌单\r\n * @params limit 取出数量默认为 30\r\n */\r\nexport const getPersonalized = limit =>\r\n  api.get(`/personalized?limit=${limit}`, {})\r\n\r\n/**\r\n * @method 获取推荐歌单\r\n */\r\nexport const getNewSongs = () => api.get(`/personalized/newsong`, {})\r\n\r\n/**\r\n * @method 获取热门歌手\r\n */\r\nexport const getHotSinger = () => api.get(`/top/artists?offset=0&limit=30`, {})\r\n\r\n\r\n/**\r\n * @method 获取歌手分类列表\r\n * @params cat 即 category Code,歌手类型,默认 1001,返回华语男歌手数据\r\n * @params limit 返回数量 , 默认为30\r\n * @params offset 偏移数量，用于分页 , 如 : 如 :( 页数 -1)*30, 其中 30 为 limit 的值 , 默认为 0\r\n * @params initial 按首字母索引查找参数, 如 /artist/list?type=1&area=96&initial=b 返回内容将以 name 字段开头为 b 或者拼音开头为 b 为顺序排列, 热门传-1,#传0\r\n */\r\nexport const getSingerList = params => api.get(`/artist/list`, { params })\r\n\r\n/**\r\n * @method 获取歌手单曲\r\n * @params id 歌手 id\r\n */\r\nexport const getArtists = id => api.get(`/artists?id=${id}`, {})\r\n\r\n/**\r\n * @method 获取歌手mv\r\n * @params id 歌手 id\r\n */\r\nexport const getArtistMv = params => api.get(`/artist/mv`, { params })\r\n\r\n/**\r\n * @method 获取歌手专辑\r\n * @params limit 返回数量 , 默认为30\r\n * @params offset 偏移数量，用于分页 , 如 : 如 :( 页数 -1)*30, 其中 30 为 limit 的值 , 默认为 0\r\n */\r\nexport const getArtistAlbum = params => api.get(`/artist/album`, { params })\r\n\r\n/**\r\n * @method 获取歌手描述\r\n * @params id 歌手 id\r\n */\r\nexport const getArtistDesc = id => api.get(`/artist/desc?id=${id}`, {})\r\n\r\n/**\r\n * @method 获取相似歌手\r\n * @params id 歌手 id\r\n */\r\nexport const getArtistSimi = id => api.get(`/simi/artist?id=${id}`, {})\r\n\r\n/**\r\n * @method 获取排行榜内容摘要\r\n */\r\nexport const getToplist = () => api.get(`/toplist/detail`, {})\r\n\r\n/**\r\n * @method 获取歌单分类\r\n */\r\nexport const getCatList = () => api.get(`/playlist/catlist`, {})\r\n\r\n/**\r\n * @method 获取热门歌单分类\r\n */\r\nexport const getHotlist = () => api.get(`/playlist/hot`, {})\r\n\r\n/**\r\n * @method 获取歌单\r\n */\r\nexport const getPlayList = params => api.get(`/top/playlist`, { params })\r\n\r\n/**\r\n * @method 获取歌单详情\r\n */\r\nexport const getPlayListDetail = (id, s, time) =>\r\n  api.get(`/playlist/detail?id=${id}&s=${s}&timestamp=${time}`, {})\r\n\r\n/**\r\n * @method 获取歌曲详情\r\n */\r\nexport const getSongDetail = (ids, time) =>\r\n  api.post(`/song/detail?timestamp=${time}`, { ids })\r\n\r\n/**\r\n * @method 相关歌单推荐\r\n */\r\nexport const getRelatedPlaylist = id =>\r\n  api.get(`/related/playlist?id=${id}`, {})\r\n\r\n/**\r\n * @method 获取相似歌单\r\n */\r\nexport const getSimiPlaylist = id => api.get(`/simi/playlist?id=${id}`, {})\r\n\r\n/**\r\n * @method 歌单评论\r\n * @params id 歌单 id\r\n * @params limit 取出评论数量 默认为 20\r\n * @params offset 偏移数量 , 用于分页 , 如 :( 评论页数 -1)*20, 其中 20 为 limit 的值\r\n * @params before 分页参数,取上一页最后一项的 time 获取下一页数据(获取超过5000条评论的时候需要用到)\r\n */\r\nexport const getCommentPlaylist = params =>\r\n  api.get(`/comment/playlist`, { params })\r\n\r\n/**\r\n * @method 歌单收藏者\r\n * @params id 歌单 id\r\n * @params limit 取出评论数量 默认为 20\r\n * @params offset 偏移数量 , 用于分页 , 如 :( 评论页数 -1)*20, 其中 20 为 limit 的值\r\n */\r\nexport const getSubscribersPlaylist = params =>\r\n  api.get(`/playlist/subscribers`, { params })\r\n\r\n/**\r\n * @method 获取视频分类列表\r\n */\r\nexport const getVideoCategory = () => api.get(`/video/category/list`, {})\r\n\r\n/**\r\n * @method 获取视频标签列表\r\n */\r\nexport const getVideoTag = () => api.get(`/video/group/list`, {})\r\n\r\n/**\r\n * @method 获取全部视频列表\r\n */\r\nexport const getVideoAll = offset =>\r\n  api.get(`/video/timeline/all?offset=${offset}`, {})\r\n\r\n/**\r\n * @method 获取视频标签/分类下的视频\r\n */\r\nexport const getVideoOther = (id, offset) =>\r\n  api.get(`/video/group?id=${id}&offset=${offset}`, {})\r\n\r\n/**\r\n * @method 获取全部mv\r\n */\r\nexport const getMvAll = params => api.get(`/mv/all`, { params })\r\n\r\n/**\r\n * @method 获取视频播放地址\r\n */\r\nexport const getVideoUrl = id => api.get(`/video/url?id=${id}`, {})\r\n\r\n/**\r\n * @method 获取视频详情\r\n */\r\nexport const getVideoDetail = id => api.get(`/video/detail?id=${id}`, {})\r\n\r\n/**\r\n * @method 获取视频点赞转发评论数数据\r\n */\r\nexport const getVideoDetailInfo = (id, time) =>\r\n  api.get(`/video/detail/info?vid=${id}&timestamp=${time}`, {})\r\n\r\n/**\r\n * @method 相关视频\r\n */\r\nexport const getVideoRelated = id => api.get(`/related/allvideo?id=${id}`, {})\r\n\r\n/**\r\n * @method 视频评论\r\n */\r\nexport const getVideoComments = params => api.get(`/comment/video`, { params })\r\n\r\n/**\r\n * @method 发送评论\r\n * @params t:1 发送, 2 回复\r\n * @params tpye: 0: 歌曲，1: mv，2: 歌单，3: 专辑，4: 电台，5: 视频，6: 动态\r\n * @params id:对应资源 id\r\n * @params content :要发送的内容\r\n * @params commentId :回复的评论id (回复评论时必填)\r\n * @调用例子 : /comment?t=1&type=1&id=5436712&content=test (往广岛之恋 mv 发送评论: test)\r\n * @注意：如给动态发送评论，则不需要传 id，需要传动态的 threadId,如：/comment?t=1&type=6&threadId=A_EV_2_6559519868_32953014&content=test\r\n */\r\n\r\nexport const sendComment = params => api.get(`/comment`, { params })\r\n\r\n/**\r\n * @method 给评论点赞\r\n * @params t:1 点赞, 2 取消点赞\r\n * @params tpye: 0: 歌曲，1: mv，2: 歌单，3: 专辑，4: 电台，5: 视频，6: 动态\r\n * @params cid: 评论id\r\n * @调用例子 : /comment/like?id=29178366&cid=12840183&t=1&type=0 对应给 https://music.163.com/#/song?id=29178366 最热门的评论点赞\r\n */\r\n\r\nexport const likeComment = params => api.get(`/comment/like`, { params })\r\n\r\n/**\r\n * @method 资源点赞( MV,电台,视频)\r\n * @params tpye: 1: mv，4: 电台，5: 视频，6: 动态\r\n * @params t:1 点赞, 2 取消点赞\r\n * @params id：资源id\r\n */\r\n\r\nexport const likeResource = (type, t, id) =>\r\n  api.get(`/resource/like?type=${type}&t=${t}&id=${id}`, {})\r\n\r\n/**\r\n * @method 获取mv详情\r\n */\r\nexport const getMvDetail = id => api.get(`/mv/detail?mvid=${id}`, {})\r\n\r\n/**\r\n * @method 获取mv点赞转发评论数数据\r\n */\r\nexport const getMvDetailInfo = (id, time) =>\r\n  api.get(`/mv/detail/info?mvid=${id}&timestamp=${time}`, {})\r\n\r\n/**\r\n * @method 获取mv播放地址\r\n */\r\nexport const getMvUrl = id => api.get(`/mv/url?id=${id}`, {})\r\n\r\n/**\r\n * @method mv评论\r\n */\r\nexport const getMvComments = params => api.get(`/comment/mv`, { params })\r\n\r\n/**\r\n * @method 相似mv\r\n */\r\nexport const getMvRelated = id => api.get(`/simi/mv?mvid=${id}`, {})\r\n\r\n\r\n/**\r\n * @method 获取歌词\r\n */\r\nexport const getLyric = id => api.get(`/lyric?id=${id}`, {})\r\n\r\n/**\r\n * @method 收藏/取消收藏歌单\r\n */\r\nexport const collectPlaylist = (t, id) =>\r\n  api.get(`/playlist/subscribe?t=${t}&id=${id}`, {})\r\n\r\n/**\r\n * @method 获取专辑内容\r\n */\r\nexport const getAlbumData = id => api.get(`/album?id=${id}`, {})\r\n\r\n/**\r\n * @method 获取专辑评论\r\n */\r\nexport const getAlbumComment = params => api.get(`/comment/album`, { params })\r\n"]}]}