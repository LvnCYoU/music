{"remainingRequest":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\src\\views\\playlist\\detail\\Index.vue?vue&type=template&id=202c4467&scoped=true&","dependencies":[{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\src\\views\\playlist\\detail\\Index.vue","mtime":1600536934831},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}