{"remainingRequest":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zlw12\\Desktop\\store\\vue-music\\src\\components\\common\\MV\\index.vue?vue&type=style&index=0&id=6267c81b&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\src\\components\\common\\MV\\index.vue","mtime":1605078668726},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZpbHRlcnsKICB1bHsKICAgIG1hcmdpbjogMjBweCAwOwogICAgZGlzcGxheTogZmxleDsKICAgIAogICAgbGl7CiAgICAgIG1hcmdpbi1yaWdodDogNnB4OwogICAgICB3aWR0aDogNTZweDsKICAgICAgaGVpZ2h0OiAyOHB4OwogICAgICBsaW5lLWhlaWdodDogMjlweDsKICAgICAgZm9udC1zaXplOiAxM3B4OwogICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgIGJvcmRlci1yYWRpdXM6IDE0cHg7CiAgICAgIGN1cnNvcjogcG9pbnRlcjsKCiAgICAgICYuaXMtYWN0aXZlewogICAgICAgIGJhY2tncm91bmQ6ICNmYTI4MDA7CiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDsKICAgICAgICBjb2xvcjogI2ZmZjsKICAgICAgfQogICAgfQogIH0KICAudGFnLW9yZGVyewogICAgbGl7CiAgICAgICY6Zmlyc3QtY2hpbGR7CiAgICAgICAgd2lkdGg6IDEwMnB4OwogICAgICAgIGJvcmRlci1yYWRpdXM6IDE0cHg7CiAgICAgIH0KICAgIH0KICB9Cn0KCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/common/MV","sourcesContent":["<template>\r\n  <div id=\"mv\">\r\n    <div class=\"container\">\r\n      <div class=\"filter\">\r\n        <ul class=\"tag-area\">\r\n          <li \r\n          :class=\"item.type == params.area ? 'is-active' : ''\"\r\n          v-for=\"item in area\" \r\n          :key=\"item.type\"\r\n          @click=\"chooseType('area',item.type)\"\r\n          ref=\"area\"\r\n          >\r\n            {{ item.name }}\r\n          </li>\r\n        </ul>\r\n        <ul class=\"tag-type\">\r\n          <li v-for=\"item in type\" \r\n          :class=\"item.type == params.type ? 'is-active' : ''\"\r\n          :key=\"item.type + item.name\"\r\n          @click=\"chooseType('type',item.type)\"\r\n          ref=\"sex\"\r\n          >\r\n            {{ item.name }}\r\n          </li>\r\n        </ul>\r\n        <ul class=\"tag-order\">\r\n          <li \r\n          :class=\"params.order == item.type ? 'is-active' : ''\"\r\n          v-for=\"item in order\" \r\n          :key=\"item.type+item.name\"\r\n          @click=\"chooseType('order',item.type)\"\r\n          ref=\"lang\"\r\n          >\r\n            {{ item.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <mv :list=\"mv\" />\r\n      <push-load v-show=\"loadStatus\" @scroll-data='load'/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions} from 'vuex'\r\nimport pushLoad from '../push-load';\r\nimport Mv from './mv'\r\nexport default {\r\n  data(){\r\n    return{\r\n      loading: true,\r\n      loadStatus: true,\r\n      mv: [],\r\n      // 获取mv配置项\r\n      area: [\r\n        {\r\n          name: '全部',\r\n          type: '',\r\n        },\r\n        {\r\n          name: '内地',\r\n          type: '内地',\r\n        },\r\n        {\r\n          name: '港台',\r\n          type: '港台',\r\n        },\r\n        {\r\n          name: '欧美',\r\n          type: '欧美',\r\n        },\r\n        {\r\n          name: '日本',\r\n          type: '日本'\r\n        },\r\n        {\r\n          name: '韩国',\r\n          type: '韩国'\r\n        }\r\n      ],\r\n      type: [\r\n        {\r\n          name: '全部',\r\n          type: '',\r\n        },\r\n        {\r\n          name: '官方版',\r\n          type: '官方版',\r\n        },\r\n        {\r\n          name: '原生',\r\n          type: '原生',\r\n        },\r\n        {\r\n          name: '现场版',\r\n          type: '现场版',\r\n        },\r\n        {\r\n          name: '网易出品',\r\n          type: '网易出品'\r\n        },\r\n      ],\r\n      order: [\r\n        {\r\n          name: '上升最快',\r\n          type: '',\r\n        },\r\n        {\r\n          name: '最新',\r\n          type: '最新',\r\n        },\r\n        {\r\n          name: '最热',\r\n          type: '最热',\r\n        },\r\n      ],\r\n      params: {\r\n        area: '',\r\n        type: '',\r\n        order: '',\r\n        limit: 16,\r\n        offset: 0,\r\n      },\r\n    }\r\n  },\r\n  components: {\r\n    pushLoad,\r\n    Mv,\r\n  },\r\n  mounted(){\r\n    this.init();\r\n  },\r\n  methods: {\r\n    ...mapActions(['mvInit']),\r\n\r\n    init(){\r\n      if(this.$store.state.mv.offset){\r\n        this.params = this.$store.state.mv;\r\n        this.params.offset = 0;\r\n      }\r\n      this.getMv(this.params);\r\n    },\r\n\r\n    // 获取mv\r\n    async getMv(params){\r\n      this.mvInit(params);\r\n      await this.$api.MvAll(params)\r\n        .then( res => {\r\n          let arr = res.data.data;\r\n          arr.map( list => {\r\n            let obj = {\r\n              artistName: list.artistName,\r\n              name: list.name,\r\n              count: list.playCount,\r\n              duration: list.duration,\r\n              cover: list.cover,\r\n            }\r\n            this.mv.push(obj)\r\n          })\r\n        })\r\n      if(this.mv.length > 10){\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    // 类别选择\r\n    chooseType(str,val){\r\n      let actions = {\r\n        'area': () => this.params.area = val,\r\n        'order': () => this.params.order = val,\r\n        'type' : () => this.params.type = val,\r\n      }\r\n      actions[`${str}`].call(this)\r\n      this.mv.length = 0;\r\n      this.loading = true;\r\n      this.params.offset = 0;\r\n      this.mvInit(this.params);\r\n      this.getMv(this.params);\r\n    },\r\n\r\n    load(){\r\n      this.loadStatus && setTimeout( () => {\r\n        this.params.offset += this.params.limit;\r\n        this.getMv(this.params);\r\n      },1500)\r\n      this.loadStatus = true;\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .filter{\r\n    ul{\r\n      margin: 20px 0;\r\n      display: flex;\r\n      \r\n      li{\r\n        margin-right: 6px;\r\n        width: 56px;\r\n        height: 28px;\r\n        line-height: 29px;\r\n        font-size: 13px;\r\n        text-align: center;\r\n        border-radius: 14px;\r\n        cursor: pointer;\r\n\r\n        &.is-active{\r\n          background: #fa2800;\r\n          font-weight: 700;\r\n          color: #fff;\r\n        }\r\n      }\r\n    }\r\n    .tag-order{\r\n      li{\r\n        &:first-child{\r\n          width: 102px;\r\n          border-radius: 14px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n</style>"]}]}