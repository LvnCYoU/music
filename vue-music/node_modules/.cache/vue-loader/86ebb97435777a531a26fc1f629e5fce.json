{"remainingRequest":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zlw12\\Desktop\\store\\vue-music\\src\\components\\common\\input\\index.vue?vue&type=style&index=0&id=e64e00b8&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\src\\components\\common\\input\\index.vue","mtime":1605291899719},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCjo6di1kZWVwLmlucHV0ewogIHBhZGRpbmctcmlnaHQ6IDQwcHg7CiAgd2lkdGg6IDE1OHB4OwogIHotaW5kZXg6IDk7CiAgaGVpZ2h0OiAxMDAlOwogIC5lbC1pbnB1dCBpbnB1dHsKICAgIGhlaWdodDogMTAwJTsKICB9Cn0KLmVsLWF1dG9jb21wbGV0ZS1zdWdnZXN0aW9uIGxpewogIC5pdGVtewogICAgQGluY2x1ZGUgZWxsaXBzZTsKICB9Cn0KLmVsLWF1dG9jb21wbGV0ZXsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7Cn0KCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/common/input","sourcesContent":["<template>\r\n  <div class=\"input\">\r\n    <el-autocomplete \r\n      placeholder=\"请输入内容\"\r\n      v-model=\"search\"\r\n      :trigger-on-focus=\"false\"\r\n      :fetch-suggestions=\"recommendSearch\"\r\n      @select=\"goSearch\"\r\n      :select-when-unmatched=\"true\"\r\n    >\r\n      <i slot=\"prefix\" class=\"el-input__icon el-icon-search\"></i>\r\n      <template slot-scope=\"{ item }\">\r\n        <div class=\"item\" :title=\"item.name\">\r\n          <span class=\"name\">{{ item.name }}</span>\r\n        </div>\r\n      </template>\r\n    </el-autocomplete>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data(){\r\n    return{\r\n      search: '',\r\n    }\r\n  },\r\n  methods: {\r\n    async recommendSearch(str,cb){\r\n      await this.$api.SearchSuggest(str)\r\n        .then( res => {\r\n          let arr,item = [];\r\n          let data = res.data.result;\r\n          let action = new Map([\r\n            ['songs',() => 1],\r\n            ['albums',() => 10],\r\n            ['artists',() => 100],\r\n            ['playlists',() => 1000],\r\n            ['default', () => 1],\r\n          ])\r\n          arr = data.order;\r\n          arr.map( list => {\r\n            data[list].map( type => {\r\n              type.type = \r\n                action.get(list).call(this) || \r\n                action.get('default').call(this);\r\n            })\r\n            item.push(...data[list])\r\n          })\r\n          cb(item)\r\n        })\r\n        .catch( () => {\r\n          return ;\r\n        })\r\n    },\r\n\r\n    // 跳转至搜索界面\r\n    goSearch(data){\r\n      if(!this.search) return;\r\n      console.log(data)\r\n      let keywords = data.name || this.search;\r\n      let type;\r\n      if(!data.name){\r\n        this.$router.push({name: 'search',query: {\r\n          keywords,\r\n          type: 1,\r\n        }})\r\n      } else{\r\n        type = data.type;\r\n        this.$router.push({name: 'search',query: {\r\n          keywords,\r\n          type,\r\n        }})\r\n      }\r\n      this.search = '';\r\n      return ;\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  ::v-deep.input{\r\n    padding-right: 40px;\r\n    width: 158px;\r\n    z-index: 9;\r\n    height: 100%;\r\n    .el-input input{\r\n      height: 100%;\r\n    }\r\n  }\r\n  .el-autocomplete-suggestion li{\r\n    .item{\r\n      @include ellipse;\r\n    }\r\n  }\r\n  .el-autocomplete{\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  \r\n</style>\r\n\r\n"]}]}