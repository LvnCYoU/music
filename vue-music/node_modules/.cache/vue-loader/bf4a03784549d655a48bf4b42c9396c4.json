{"remainingRequest":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zlw12\\Desktop\\store\\vue-music\\src\\components\\common\\search\\index.vue?vue&type=style&index=0&id=740c0c2e&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\src\\components\\common\\search\\index.vue","mtime":1605003257689},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\store\\vue-music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2VhcmNoLWJ0bnsKICBAaW5jbHVkZSBmbGV4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDI1MHB4OwogIGJhY2tncm91bmQ6ICMwMDA7CiAgLmJ0bi1zZWFyY2h7CiAgICBoZWlnaHQ6IDU1cHg7CiAgfQogIC5pbnB1dHsKICAgIHdpZHRoOiA3MjBweDsKICB9Cn0KLmNvbnRhaW5lcnsKICBAaW5jbHVkZSBzaGFkb3c7CiAgLmtpbmQtYnRuewogICAgbWFyZ2luLXRvcDogMjhweDsKICAgIHBhZGRpbmc6IDEwcHggMCAwIDEwcHg7CiAgICAudGl0bGV7CiAgICAgIG1hcmdpbi1ib3R0b206IDE3cHg7CiAgICAgIGNvbG9yOiAjOTk5OwogICAgfQogICAgLmJ0bnsKICAgICAgbWFyZ2luLWJvdHRvbTogNDJweDsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAgbGl7CiAgICAgICAgbWFyZ2luLXJpZ2h0OiAzNHB4OwogICAgICAgIGNvbG9yOiAjMzMzOwogICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7CiAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAgICYuaXMtYWN0aXZlewogICAgICAgICAgY29sb3I6ICRtYWluQ29sb3I7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/common/search","sourcesContent":["<template>\r\n  <div class=\"search-detail\">\r\n    <div class=\"search-btn\">\r\n      <star></star> \r\n      <div class=\"btn-search\">\r\n        <search-input></search-input>\r\n      </div>\r\n    </div>\r\n    <div class=\"container\">\r\n      <div class=\"kind-btn\">\r\n        <div class=\"title\">\r\n          <small>搜索\"{{ keywords }}\",找到{{len + '个' + cur.name}}</small>\r\n        </div>\r\n        <ul class=\"btn\">\r\n          <li \r\n            v-for=\"item in type\" \r\n            :key=\"item.type\"\r\n            :class=\"cur.name == item.name ? 'is-active' : ''\"\r\n            @click=\"changeType(item.num)\"\r\n          >\r\n            {{ item.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"main\">\r\n        <song-list :songLists=\"list\" v-if=\"cur.type == 1\" />\r\n        <singer :artist=\"list\" v-if=\"cur.type == 100\" />\r\n        <song-sheet :songLists=\"list\" v-if=\"cur.type == 1000\" />\r\n        <album :list=\"list\" v-if=\"cur.type == 10\" />\r\n        <error v-if=\"!list\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Star from '../star'\r\nimport SearchInput from '../input'\r\nimport SongList from '../song-list'\r\nimport SongSheet from '../songsheet/songsheet_scss'\r\nimport Singer from '../singer/singer'\r\nimport Album from '../album'\r\nimport Error from '../error'\r\nexport default {\r\n  data(){\r\n    return{\r\n      keywords: this.$route.query.keywords,\r\n      len: null,\r\n      cur: '',\r\n      type: [],\r\n      list: [],\r\n    }\r\n  },\r\n  components: {\r\n    Star,\r\n    SearchInput,\r\n    SongList,\r\n    SongSheet,\r\n    Singer,\r\n    Album,\r\n    Error,\r\n  },\r\n  watch:{\r\n    $route(val){\r\n      console.log(val)\r\n      this.getSearch();\r\n    }\r\n  },\r\n  mounted(){\r\n    this.init();\r\n  },\r\n  methods: {\r\n    init(){\r\n      this.Type();\r\n      this.getSearch();\r\n    },\r\n\r\n    // 获取搜索信息\r\n    async getSearch(){\r\n      this.keywords = this.$route.query.keywords;\r\n      let keywords = this.keywords;\r\n      let type = this.$route.query.type;\r\n      let params = {\r\n        keywords,\r\n        type,\r\n      }\r\n      let action = new Map([\r\n        [1, list => {\r\n          let id;\r\n          id = this.utils.MusicId(list)\r\n          this.getSongDetail(id)\r\n        }],\r\n        [10, list => this.list = list],\r\n        [100, list => this.list = list],\r\n        [1000, list => this.list = list]\r\n\r\n      ])\r\n      await this.$api.Search(params)\r\n        .then(res => {\r\n          console.log(res)\r\n          let index;\r\n          this.type.some( list => {\r\n            if(list.num == this.$route.query.type){\r\n              index = list.type;\r\n              this.cur = {\r\n                name: list.name,\r\n                type: list.num,\r\n              }\r\n              return;\r\n            }\r\n          })\r\n          this.len = res.data.result[index].length;\r\n          console.log(res.data.result[index],this.cur)\r\n          action.get(this.cur.type)(res.data.result[index]);\r\n        })\r\n      \r\n    },\r\n\r\n\r\n    // type种类\r\n    Type(){\r\n      let obj = [\r\n        {\r\n          name: '单曲',\r\n          type: 'songs',\r\n          num: 1,\r\n        },\r\n        {\r\n          name: '专辑',\r\n          type: 'albums',\r\n          num: 10,\r\n        },\r\n        {\r\n          name: '歌手',\r\n          type: 'artists',\r\n          num: 100,\r\n        },\r\n        {\r\n          name: '歌单',\r\n          type: 'playlists',\r\n          num: 1000,\r\n        },\r\n      ]\r\n      this.type = obj;\r\n    },\r\n\r\n    // 改变搜索内容\r\n    changeType(num){\r\n      if(num == this.cur.type) return;\r\n      this.$router.push({name: 'search',query: {\r\n        keywords: this.keywords,\r\n        type: num,\r\n      }})\r\n      this.getSearch();\r\n    },\r\n\r\n    // 获取音乐详情\r\n    async getSongDetail(id){\r\n      await this.$api.SongDetail(id)\r\n        .then( res => {\r\n          this.list = res.data.songs;\r\n        })\r\n    },\r\n\r\n    // 获取歌单详情\r\n    async getSongSheet(params){\r\n      await this.$api.TopPlaylist(params)\r\n        .then( res => {\r\n          this.songSheet = res.data.playlists\r\n          this.total = res.data.total;\r\n          this.$refs.sort.innerHTML = res.data.cat;\r\n        })\r\n    },\r\n\r\n\r\n\r\n    \r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .search-btn{\r\n    @include flex;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 250px;\r\n    background: #000;\r\n    .btn-search{\r\n      height: 55px;\r\n    }\r\n    .input{\r\n      width: 720px;\r\n    }\r\n  }\r\n  .container{\r\n    @include shadow;\r\n    .kind-btn{\r\n      margin-top: 28px;\r\n      padding: 10px 0 0 10px;\r\n      .title{\r\n        margin-bottom: 17px;\r\n        color: #999;\r\n      }\r\n      .btn{\r\n        margin-bottom: 42px;\r\n        display: flex;\r\n        li{\r\n          margin-right: 34px;\r\n          color: #333;\r\n          font-weight: 300;\r\n          cursor: pointer;\r\n          &.is-active{\r\n            color: $mainColor;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>"]}]}