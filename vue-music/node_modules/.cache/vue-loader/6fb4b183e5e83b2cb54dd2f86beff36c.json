{"remainingRequest":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\src\\views\\mv\\Index.vue?vue&type=style&index=0&id=330160e6&lang=stylus&scoped=true&","dependencies":[{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\src\\views\\mv\\Index.vue","mtime":1600536934822},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\stylus-loader\\index.js","mtime":1519606876000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\zlw12\\Desktop\\新建文件夹\\desktop-nicemusic\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5tdi13cmFwIHsNCiAgLy8gaGVpZ2h0OiAxMDB2aDsNCiAgbWFyZ2luLXRvcDogLTIwcHg7DQogIGxpIHsNCiAgICAmOmhvdmVyIHsNCiAgICAgIGNvbG9yOiAkY29sb3ItdGhlbWU7DQogICAgICB0cmFuc2l0aW9uOiBhbGwgMC40czsNCiAgICB9DQogIH0NCiAgLnRhZy1lbiB7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBmbGV4LXdyYXA6IHdyYXA7DQogICAgbWFyZ2luLXRvcDogMTBweDsNCiAgICBsaSB7DQogICAgICB3aWR0aDogNTZweDsNCiAgICAgIGhlaWdodDogMjhweDsNCiAgICAgIG1hcmdpbi1yaWdodDogMTRweDsNCiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgIGxpbmUtaGVpZ2h0OiAyOXB4Ow0KICAgICAgYm9yZGVyLXJhZGl1czogNTAlOw0KICAgICAgZm9udC1zaXplOiAxM3B4Ow0KICAgICAgY29sb3I6ICMzMzMzMzM7DQogICAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgICAmOmZpcnN0LWNoaWxkLA0KICAgICAgJi5sYXN0LWNoaWxkIHsNCiAgICAgICAgd2lkdGg6IDU2cHg7DQogICAgICAgIGJvcmRlci1yYWRpdXM6IDE0cHg7DQogICAgICB9DQogICAgICAmLmFjdGl2ZSB7DQogICAgICAgIGJhY2tncm91bmQ6ICRjb2xvci10aGVtZTsNCiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDsNCiAgICAgICAgY29sb3I6ICNmZmZmZmY7DQogICAgICB9DQogICAgICAmOmhvdmVyIHsNCiAgICAgICAgY29sb3I6ICRjb2xvci10aGVtZTsNCiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuNHM7DQogICAgICB9DQogICAgfQ0KICB9DQogIC50YWctbGFuZyB7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBtYXJnaW4tdG9wOiAyMHB4Ow0KICAgIG1hcmdpbi1ib3R0b206IDIwcHg7DQogICAgbGkgew0KICAgICAgd2lkdGg6IDU2cHg7DQogICAgICBoZWlnaHQ6IDI4cHg7DQogICAgICBsaW5lLWhlaWdodDogMjlweDsNCiAgICAgIGZvbnQtc2l6ZTogMTNweDsNCiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgIGJvcmRlci1yYWRpdXM6IDE0cHg7DQogICAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgICBtYXJnaW4tcmlnaHQ6IDZweDsNCiAgICAgICYuYWN0aXZlIHsNCiAgICAgICAgYmFja2dyb3VuZDogJGNvbG9yLXRoZW1lOw0KICAgICAgICBmb250LXdlaWdodDogNzAwOw0KICAgICAgICBjb2xvcjogI2ZmZmZmZjsNCiAgICAgIH0NCiAgICB9DQogIH0NCiAgLnRhZy10eXBlIHsNCiAgICBsaSB7DQogICAgICB3aWR0aDogYXV0bzsNCiAgICAgIHBhZGRpbmc6IDAgMTVweDsNCiAgICB9DQogIH0NCiAgLnNpbmdlci1saXN0IHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGZsZXgtd3JhcDogd3JhcDsNCiAgICBtYXJnaW4tdG9wOiAzMHB4Ow0KICAgIG1hcmdpbjogMzBweCAtMTVweCAwOw0KICB9DQp9DQo="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views/mv","sourcesContent":["<template>\r\n  <div class=\"mv-wrap container\">\r\n    <div class=\"filter\">\r\n      <ul class=\"tag-lang\">\r\n        <li\r\n          v-for=\"item of areaList\"\r\n          :key=\"item.value\"\r\n          :class=\"area == item.value ? 'active' : ''\"\r\n          @click=\"chooseType('area', item.value)\"\r\n        >\r\n          {{ item.label }}\r\n        </li>\r\n      </ul>\r\n      <ul class=\"tag-lang tag-type\">\r\n        <li\r\n          v-for=\"item of classifys\"\r\n          :key=\"item.value\"\r\n          :class=\"classify == item.value ? 'active' : ''\"\r\n          @click=\"chooseType('classify', item.value)\"\r\n        >\r\n          {{ item.label }}\r\n        </li>\r\n      </ul>\r\n      <ul class=\"tag-lang\">\r\n        <li\r\n          v-for=\"item of sortList\"\r\n          :key=\"item.value\"\r\n          :class=\"sort == item.value ? 'active' : ''\"\r\n          @click=\"chooseType('sort', item.value)\"\r\n        >\r\n          {{ item.label }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <load-more @scroll-state=\"load\">\r\n      <mv-list :mvs=\"mvs\" type=\"mv\"></mv-list>\r\n    </load-more>\r\n    <div v-if=\"loading\" class=\"load-bottom\">\r\n      <nice-loading />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { createVideo } from '@/model/video'\r\nimport MvList from 'components/common/mvList/Index'\r\nimport loadMore from 'components/common/loadMore/Index'\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 语种\r\n      area: '全部',\r\n      areaList: [\r\n        {\r\n          value: '全部',\r\n          label: '全部'\r\n        },\r\n        {\r\n          value: '内地',\r\n          label: '内地'\r\n        },\r\n        {\r\n          value: '港台',\r\n          label: '港台'\r\n        },\r\n        {\r\n          value: '欧美',\r\n          label: '欧美'\r\n        },\r\n        {\r\n          value: '日本',\r\n          label: '日本'\r\n        },\r\n        {\r\n          value: '韩国',\r\n          label: '韩国'\r\n        }\r\n      ],\r\n      // 分类\r\n      classify: '全部',\r\n      classifys: [\r\n        {\r\n          value: '全部',\r\n          label: '全部'\r\n        },\r\n        {\r\n          value: '官方版',\r\n          label: '官方版'\r\n        },\r\n        {\r\n          value: '原生',\r\n          label: '原生'\r\n        },\r\n        {\r\n          value: '现场版',\r\n          label: '现场版'\r\n        },\r\n        {\r\n          value: '网易出品',\r\n          label: '网易出品'\r\n        }\r\n      ],\r\n      // 排序\r\n      sort: '上升最快',\r\n      sortList: [\r\n        {\r\n          value: '上升最快',\r\n          label: '上升'\r\n        },\r\n        {\r\n          value: '最热',\r\n          label: '最热'\r\n        },\r\n        {\r\n          value: '最新',\r\n          label: '最新'\r\n        }\r\n      ],\r\n      // 请求参数\r\n      params: {\r\n        // 返回数量\r\n        limit: 12,\r\n        // 偏移数量\r\n        offset: 0,\r\n        // 分类\r\n        type: '全部',\r\n        // 语种\r\n        area: '全部',\r\n        order: '上升最快'\r\n      },\r\n      mvs: [],\r\n      // 是否显示加载动画\r\n      loading: false,\r\n      // 是否还有数据\r\n      loadStatus: true\r\n    }\r\n  },\r\n  components: {\r\n    MvList,\r\n    loadMore\r\n  },\r\n  watch: {},\r\n  methods: {\r\n    // 选择歌手分类\r\n    chooseType(type, val) {\r\n      if (type == 'area') {\r\n        this.area = val\r\n        this.params.area = val\r\n      } else if (type == 'classify') {\r\n        this.classify = val\r\n        this.params.type = val\r\n      } else if (type == 'sort') {\r\n        this.en = val\r\n        this.params.order = val\r\n      }\r\n      this.params.offset = 0\r\n      this.loadStatus = true\r\n      this.mvs = []\r\n      this.getMvAll()\r\n    },\r\n    // 获取mv列表\r\n    async getMvAll() {\r\n      this.fullscreenLoading = true\r\n      try {\r\n        this.loadStatus = false\r\n        let res = await this.$api.getMvAll(this.params)\r\n        if (res.code === 200) {\r\n          console.log(res)\r\n          this.mvs = this.mvs.concat(this._normalizeVideos(res.data))\r\n          if (res.hasMore) {\r\n            this.loading = true\r\n            this.loadStatus = true\r\n            this.params.offset += 12\r\n          } else {\r\n            this.loading = false\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(error)\r\n      }\r\n    },\r\n    // 处理视频\r\n    _normalizeVideos(list) {\r\n      let ret = []\r\n      list.map(item => {\r\n        if (item.id) {\r\n          ret.push(\r\n            createVideo({\r\n              id: item.id,\r\n              nickName: item.artistName,\r\n              name: item.name,\r\n              playCount: item.playCount,\r\n              duration: item.duration,\r\n              image: item.cover\r\n            })\r\n          )\r\n        }\r\n      })\r\n      return ret\r\n    },\r\n    // 加载更多\r\n    load() {\r\n      if (this.loadStatus) {\r\n        setTimeout(() => {\r\n          this.getMvAll()\r\n        }, 1000)\r\n      }\r\n    }\r\n  },\r\n  created() {},\r\n  mounted() {\r\n    this.getMvAll()\r\n  }\r\n}\r\n</script>\r\n<style lang=\"stylus\" scoped>\r\n.mv-wrap {\r\n  // height: 100vh;\r\n  margin-top: -20px;\r\n  li {\r\n    &:hover {\r\n      color: $color-theme;\r\n      transition: all 0.4s;\r\n    }\r\n  }\r\n  .tag-en {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: 10px;\r\n    li {\r\n      width: 56px;\r\n      height: 28px;\r\n      margin-right: 14px;\r\n      text-align: center;\r\n      line-height: 29px;\r\n      border-radius: 50%;\r\n      font-size: 13px;\r\n      color: #333333;\r\n      cursor: pointer;\r\n      &:first-child,\r\n      &.last-child {\r\n        width: 56px;\r\n        border-radius: 14px;\r\n      }\r\n      &.active {\r\n        background: $color-theme;\r\n        font-weight: 700;\r\n        color: #ffffff;\r\n      }\r\n      &:hover {\r\n        color: $color-theme;\r\n        transition: all 0.4s;\r\n      }\r\n    }\r\n  }\r\n  .tag-lang {\r\n    display: flex;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n    li {\r\n      width: 56px;\r\n      height: 28px;\r\n      line-height: 29px;\r\n      font-size: 13px;\r\n      text-align: center;\r\n      border-radius: 14px;\r\n      cursor: pointer;\r\n      margin-right: 6px;\r\n      &.active {\r\n        background: $color-theme;\r\n        font-weight: 700;\r\n        color: #ffffff;\r\n      }\r\n    }\r\n  }\r\n  .tag-type {\r\n    li {\r\n      width: auto;\r\n      padding: 0 15px;\r\n    }\r\n  }\r\n  .singer-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: 30px;\r\n    margin: 30px -15px 0;\r\n  }\r\n}\r\n</style>\r\n"]}]}